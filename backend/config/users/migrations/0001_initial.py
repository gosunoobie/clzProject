# Generated by Django 5.0.2 on 2024-03-19 09:15

import core.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('deleted_date', models.DateTimeField(blank=True, null=True, verbose_name='deleted date')),
                ('username', models.CharField(max_length=254, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='email address')),
                ('mobile_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must contain only number.', regex='^([\\s\\d]+)$')])),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', validators=[core.validators.validate_file_size], verbose_name='Image')),
                ('account_provider', models.CharField(default='CloudCruise', max_length=50)),
                ('total_reward_coin', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('phone_otp', models.CharField(blank=True, editable=False, max_length=6, null=True)),
                ('phone_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('reset_password_otp', models.CharField(blank=True, editable=False, max_length=6, null=True)),
                ('reset_password_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('email_otp', models.CharField(blank=True, editable=False, max_length=6, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
    ]
